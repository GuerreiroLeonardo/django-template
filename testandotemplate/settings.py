"""
Django settings for testandotemplate project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from prettyconf import config
import sentry_sdk
import os
import dj_database_url
from sentry_sdk.integrations.django import DjangoIntegration

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config(
    "SECRET_KEY", default="-zzu57xpdmzrd#eqs6%cdgt@gqzrw-c^@(v*=w2fa(%e9#07j0"
)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=config.boolean)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'testandotemplate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'testandotemplate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASE_URL = config(
    "DATABASE_URL",
    default="postgis://local_db_user:local_db_pass@127.0.0.1:5432/testandotemplate",
)
DATABASE_URL = DATABASE_URL.replace("postgres://", "postgis://")
DATABASES = {"default": dj_database_url.parse(DATABASE_URL)}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
LANGUAGE_CODE = "pt-br"
TIME_ZONE = "America/Belem"
USE_I18N = True
USE_L10N = True
USE_TZ = True
LANGUAGES = "pt-br"
LANGUAGES = [
    ("pt_br", "PortugÃªs Brasil"),
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
# Media files
MEDIA_URL = config("MEDIA_URL", default="/media/")
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATIC_URL = '/static/'

# S3
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

DEFAULT_FILE_STORAGE = config(
    "DEFAULT_FILE_STORAGE", default="testandotemplate.storage.MediaStorage"
)

AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID", default="aws_access_key_id")
AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY", default="aws_secret_access_key")
AWS_STORAGE_BUCKET_NAME = config("AWS_STORAGE_BUCKET_NAME", default="testandotemplate")
AWS_LOCATION = "assets"
AWS_S3_CUSTOM_DOMAIN = "%s.s3.amazonaws.com" % AWS_STORAGE_BUCKET_NAME
AWS_DEFAULT_ACL = config("AWS_DEFAULT_ACL", default="public-read")

STATICFILES_STORAGE = config(
    "STATICFILES_STORAGE", default="storages.backends.s3boto3.S3Boto3Storage"
)

STATIC_URL = config(
    "STATIC_URL", default=f"https://{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/"
)

STATIC_ROOT = os.path.join(BASE_DIR, "statics")

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


# Activate Django-Heroku.
django_heroku.settings(locals(), databases=False, staticfiles=False)


# Init sentry
sentry_sdk.init(
    dsn=config("SENTRY_DSN", default=""),
    send_default_pii=True,
    traces_sample_rate=0.5,
    integrations=[DjangoIntegration()],
)